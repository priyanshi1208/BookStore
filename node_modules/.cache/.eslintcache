[{"C:\\Users\\rajni\\BookStore\\src\\index.js":"1","C:\\Users\\rajni\\BookStore\\src\\reportWebVitals.js":"2","C:\\Users\\rajni\\BookStore\\src\\App.js":"3","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-home\\bookStore-home.jsx":"4","C:\\Users\\rajni\\BookStore\\src\\component\\OrderPlaced\\Orderplaced.jsx":"5","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\bookStore-cart.jsx":"6","C:\\Users\\rajni\\BookStore\\src\\service\\StoreService.js":"7","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-home\\BookDetails.jsx":"8","C:\\Users\\rajni\\BookStore\\src\\component\\navigationBar\\NavigationBar.jsx":"9","C:\\Users\\rajni\\BookStore\\src\\component\\footer\\footer.jsx":"10","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\CartPage.jsx":"11","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\CustomerForm.jsx":"12","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\OrderSummary.jsx":"13","C:\\Users\\rajni\\BookStore\\src\\service\\AxiosService.js":"14","C:\\Users\\rajni\\BookStore\\src\\config\\config.js":"15","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-home\\Card.jsx":"16","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-home\\Bdata.jsx":"17","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-Login\\BookStore-Main.jsx":"18","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-Login\\BookStore-Login.jsx":"19","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-Login\\BookStore-Register.jsx":"20"},{"size":517,"mtime":1628853604927,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1628853604929,"results":"23","hashOfConfig":"22"},{"size":839,"mtime":1629223598641,"results":"24","hashOfConfig":"22"},{"size":1690,"mtime":1629743314995,"results":"25","hashOfConfig":"22"},{"size":2544,"mtime":1629793630484,"results":"26","hashOfConfig":"22"},{"size":2193,"mtime":1629723614346,"results":"27","hashOfConfig":"22"},{"size":977,"mtime":1629437751094,"results":"28","hashOfConfig":"22"},{"size":968,"mtime":1629800755648,"results":"29","hashOfConfig":"22"},{"size":2460,"mtime":1629800349363,"results":"30","hashOfConfig":"22"},{"size":312,"mtime":1628925152752,"results":"31","hashOfConfig":"22"},{"size":1483,"mtime":1629793196255,"results":"32","hashOfConfig":"22"},{"size":8207,"mtime":1629797611967,"results":"33","hashOfConfig":"22"},{"size":3302,"mtime":1629793054178,"results":"34","hashOfConfig":"22"},{"size":543,"mtime":1629355702465,"results":"35","hashOfConfig":"22"},{"size":61,"mtime":1628876518588,"results":"36","hashOfConfig":"22"},{"size":2127,"mtime":1629742561410,"results":"37","hashOfConfig":"22"},{"size":2957,"mtime":1628939611785,"results":"38","hashOfConfig":"22"},{"size":2143,"mtime":1629272116349,"results":"39","hashOfConfig":"22"},{"size":3149,"mtime":1629363614665,"results":"40","hashOfConfig":"22"},{"size":4798,"mtime":1629394660503,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"57ih3n",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},"C:\\Users\\rajni\\BookStore\\src\\index.js",[],["87","88"],"C:\\Users\\rajni\\BookStore\\src\\reportWebVitals.js",[],"C:\\Users\\rajni\\BookStore\\src\\App.js",[],"C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-home\\bookStore-home.jsx",["89"],"import React from 'react';\r\nimport '../bookStore-home/bookStore-home.scss';\r\nimport BookDetails from './BookDetails';\r\nimport BookService from '../../service/StoreService';\r\nimport NavigationBar from '../navigationBar/NavigationBar';\r\nimport Footer from '../footer/footer'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nclass BookStoreHome extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            bookData : [],\r\n            cartNumber:0\r\n        };\r\n        this.bookservice = new BookService();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getBookData();\r\n        this.setState({cartNumber:localStorage.getItem(\"number\") || 0})\r\n    }\r\n\r\n    changeCartNumber = () => {\r\n        this.setState({cartNumber:localStorage.getItem(\"number\") || 0})\r\n    }\r\n    getBookData = () => {\r\n        this.bookservice.getAllBooks()\r\n        .then(responseDTO => {\r\n            let books = responseDTO.data;\r\n            this.setState({bookData:books.data});\r\n        }).catch(error => {\r\n            console.log(\"Error while Getting Data From Server\");\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <div>\r\n                <NavigationBar \r\n                cartNumber = {this.state.cartNumber}\r\n                />\r\n            </div>\r\n                <div>\r\n                    <BookDetails\r\n                      BookData = {this.state.bookData}\r\n                      change = {this.changeCartNumber}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Footer/>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\nexport default BookStoreHome","C:\\Users\\rajni\\BookStore\\src\\component\\OrderPlaced\\Orderplaced.jsx",[],"C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\bookStore-cart.jsx",[],"C:\\Users\\rajni\\BookStore\\src\\service\\StoreService.js",[],"C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-home\\BookDetails.jsx",[],"C:\\Users\\rajni\\BookStore\\src\\component\\navigationBar\\NavigationBar.jsx",[],"C:\\Users\\rajni\\BookStore\\src\\component\\footer\\footer.jsx",[],"C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\CartPage.jsx",["90"],"C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\CustomerForm.jsx",["91"],"C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\OrderSummary.jsx",["92","93","94","95","96"],"C:\\Users\\rajni\\BookStore\\src\\service\\AxiosService.js",[],"C:\\Users\\rajni\\BookStore\\src\\config\\config.js",[],"C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-home\\Card.jsx",[],"C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-home\\Bdata.jsx",[],["97","98"],"C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-Login\\BookStore-Main.jsx",[],"C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-Login\\BookStore-Login.jsx",["99","100"],"import React from \"react\";\r\nimport loginImg from \"../../images/login.svg\";\r\nimport './Login-Register.scss';\r\nimport StoreService from \"../../service/StoreService\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email:'',\r\n      password:'',\r\n      emailError:'',\r\n      passwordError:'',\r\n      isError:''\r\n    }\r\n  }\r\n\r\n  handleEmailChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    });\r\n    let emailRegex=RegExp(\"^[A-Za-z0-9-\\\\+]+(\\\\.[A-Za-z0-9-]+)*@\" + \"[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\");\r\n    if(!emailRegex.test(e.target.value)){\r\n      this.setState({\r\n      emailError:\"Invalid Email Format\",\r\n      isError:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({emailError:\"\",\r\n      isError:false});\r\n    }\r\n  }\r\n\r\n  handlePasswordChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    });\r\n    let passwordRegex=RegExp(\"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&*-+=()]).{8,}$\");\r\n    if(!passwordRegex.test(e.target.value)){\r\n      this.setState({\r\n      passwordError:\"Invalid Password\",\r\n      isError:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({passwordError:\"\",\r\n      isError:false});\r\n    }\r\n  }\r\n\r\n  login = (e) => {\r\n    if(this.state.isError===true){\r\n      window.alert(\"Please enter valid data\");\r\n  }\r\n  else{\r\n    let userDetails={\r\n        emailId:this.state.email,\r\n        password:this.state.password\r\n    }\r\n    new StoreService().loginUser(userDetails)\r\n    .then(response=>{\r\n      let data = response.data;\r\n      localStorage.setItem(\"userId\",data.data);\r\n      console.log(data.data);\r\n      window.location.replace('/');\r\n    })\r\n    .catch(error=>{\r\n    window.alert(\"User Does Not Exist\");\r\n    console.log(\"Error While Login\"+JSON.stringify(error));\r\n    })\r\n  }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"base-container\" ref={this.props.containerRef}>\r\n        <div className=\"header\">Login</div>\r\n        <div className=\"content\">\r\n          <div className=\"image\">\r\n            <img src={loginImg} />\r\n          </div>\r\n          <div className=\"form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"text\" name=\"email\" onChange={(e)=>{this.handleEmailChange(e)}} placeholder=\"Email Address\" required />\r\n              <error-output className=\"email-error\" htmlFor=\"error\">{this.state.emailError}</error-output>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type=\"password\" name=\"password\" onChange={(e) => {this.handlePasswordChange(e)}} placeholder=\"password\" required />\r\n              <error-output className=\"password-error\" htmlFor=\"error\">{this.state.passwordError}</error-output>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <button type=\"button\" onClick={(e) => {this.login(e)}} className=\"btn\">\r\n            Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-Login\\BookStore-Register.jsx",["101","102"],"import React from \"react\";\r\nimport loginImg from \"../../images/login.svg\";\r\nimport './Login-Register.scss';\r\nimport StoreService from \"../../service/StoreService\";\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      id:\"\",\r\n      name:\"\",\r\n      number:\"\",\r\n      email:\"\",\r\n      password:\"\",\r\n      errorMessage:false,\r\n      textError:\"\",\r\n      numberError:\"\",\r\n      emailError:\"\",\r\n      passwordError:\"\"\r\n  }\r\n  }\r\n  handleNameChange=(e)=>{\r\n    this.setState({\r\n        [e.target.name]:e.target.value\r\n    });\r\n    let nameRegex=RegExp(\"^[A-Z]{1}[a-zA-Z\\\\s]{2,}$\");\r\n    if(!nameRegex.test(e.target.value)){\r\n      this.setState({\r\n        textError:\"Invalid Name Format\",\r\n        errorMessage:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({textError:\"\",\r\n      errorMessage:false});\r\n    }\r\n  }\r\n  handleNumberChange=(e)=>{\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    });\r\n    let numberRegex=RegExp(\"\\\\d{2}\\\\d{10}\");\r\n    if(!numberRegex.test(e.target.value)){\r\n      this.setState({\r\n      numberError:\"Invalid Number Format\",\r\n      errorMessage:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({numberError:\"\",\r\n      errorMessage:false});\r\n    }\r\n  }\r\n  handleEmailChange=(e)=>{\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    });\r\n    let emailRegex=RegExp(\"^[A-Za-z0-9-\\\\+]+(\\\\.[A-Za-z0-9-]+)*@\" + \"[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\");\r\n    if(!emailRegex.test(e.target.value)){\r\n      this.setState({\r\n      emailError:\"Invalid Email Format\",\r\n      errorMessage:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({emailError:\"\",\r\n      errorMessage:false});\r\n    }\r\n  }\r\n  handlePasswordChange=(e)=>{\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    });\r\n    let passwordRegex=RegExp(\"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&*-+=()]).{8,}$\");\r\n    if(!passwordRegex.test(e.target.value)){\r\n      this.setState({\r\n      passwordError:\"Invalid Password\",\r\n      errorMessage:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({passwordError:\"\",\r\n      errorMessage:false});\r\n    }\r\n  }\r\n  save=async(e)=>{\r\n    e.preventDefault();\r\n    if(this.state.errorMessage===true){\r\n        window.alert(\"Please enter valid data\");\r\n    }\r\n    else{\r\n      let userObject={\r\n          name:this.state.username,\r\n          emailId:this.state.email,\r\n          password:this.state.password,\r\n          phoneNumber:this.state.phoneNumber\r\n      }\r\n      new StoreService().addUser(userObject)\r\n      .then(response=>{\r\n      console.log(\"Data Added Successfully\"+JSON.stringify(response.data));\r\n      window.alert(\"User Registered Successfully\");\r\n      })\r\n      .catch(error=>{\r\n      console.log(\"Error in Adding data\"+JSON.stringify(error));\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"base-container\" ref={this.props.containerRef}>\r\n        <div className=\"header\">Register</div>\r\n        <div className=\"content\">\r\n          <div className=\"image\">\r\n            <img src={loginImg} />\r\n          </div>\r\n          <form className=\"form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Name</label>\r\n              <input type=\"text\" name=\"username\"  onChange={(e)=>{this.handleNameChange(e)}} placeholder=\"Name\" />\r\n              <error-output className=\"text-error\" htmlFor=\"error\">{this.state.textError}</error-output>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" name=\"email\"  onChange={(e)=>{this.handleEmailChange(e)}} placeholder=\"Email\" />\r\n              <error-output className=\"email-error\" htmlFor=\"error\">{this.state.emailError}</error-output>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n              <input type=\"text\" name=\"phoneNumber\"  onChange={(e)=>{this.handleNumberChange(e)}} placeholder=\"Phone Number\" />\r\n              <error-output className=\"number-error\" htmlFor=\"error\">{this.state.numberError}</error-output>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type=\"password\" name=\"password\"  onChange={(e)=>{this.handlePasswordChange(e)}} placeholder=\"Password\" />\r\n              <error-output className=\"password-error\" htmlFor=\"error\">{this.state.passwordError}</error-output>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <button type=\"submit\" onClick={(e)=>{this.save(e)}} className=\"btn\">\r\n            Register\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Register;",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":15,"column":33,"nodeType":"113","endLine":15,"endColumn":100},{"ruleId":"107","severity":1,"message":"114","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":26},{"ruleId":"107","severity":1,"message":"115","line":6,"column":11,"nodeType":"109","messageId":"110","endLine":6,"endColumn":19},{"ruleId":"107","severity":1,"message":"116","line":7,"column":11,"nodeType":"109","messageId":"110","endLine":7,"endColumn":19},{"ruleId":"107","severity":1,"message":"117","line":8,"column":11,"nodeType":"109","messageId":"110","endLine":8,"endColumn":20},{"ruleId":"107","severity":1,"message":"118","line":9,"column":11,"nodeType":"109","messageId":"110","endLine":9,"endColumn":21},{"ruleId":"111","severity":1,"message":"112","line":67,"column":33,"nodeType":"113","endLine":67,"endColumn":99},{"ruleId":"103","replacedBy":"119"},{"ruleId":"105","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":22,"column":67,"nodeType":"123","messageId":"124","endLine":22,"endColumn":68},{"ruleId":"125","severity":1,"message":"126","line":81,"column":13,"nodeType":"113","endLine":81,"endColumn":35},{"ruleId":"121","severity":1,"message":"122","line":58,"column":67,"nodeType":"123","messageId":"124","endLine":58,"endColumn":68},{"ruleId":"125","severity":1,"message":"126","line":115,"column":13,"nodeType":"113","endLine":115,"endColumn":35},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'Pagination' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'TextareaAutosize' is defined but never used.","'imageURL' is assigned a value but never used.","'bookName' is assigned a value but never used.","'bookPrice' is assigned a value but never used.","'authorName' is assigned a value but never used.",["127"],["128"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]