[{"E:\\BookStore\\src\\index.js":"1","E:\\BookStore\\src\\reportWebVitals.js":"2","E:\\BookStore\\src\\App.js":"3","E:\\BookStore\\src\\component\\bookStore-cart\\bookStore-cart.jsx":"4","E:\\BookStore\\src\\component\\bookStore-Login\\BookStore-Main.jsx":"5","E:\\BookStore\\src\\component\\OrderPlaced\\Orderplaced.jsx":"6","E:\\BookStore\\src\\component\\bookStore-home\\bookStore-home.jsx":"7","E:\\BookStore\\src\\service\\StoreService.js":"8","E:\\BookStore\\src\\component\\bookStore-cart\\CustomerForm.jsx":"9","E:\\BookStore\\src\\component\\bookStore-cart\\CartPage.jsx":"10","E:\\BookStore\\src\\component\\bookStore-cart\\OrderSummary.jsx":"11","E:\\BookStore\\src\\component\\bookStore-Login\\BookStore-Register.jsx":"12","E:\\BookStore\\src\\component\\bookStore-Login\\BookStore-Login.jsx":"13","E:\\BookStore\\src\\component\\bookStore-home\\BookDetails.jsx":"14","E:\\BookStore\\src\\component\\footer\\footer.jsx":"15","E:\\BookStore\\src\\component\\navigationBar\\NavigationBar.jsx":"16","E:\\BookStore\\src\\service\\AxiosService.js":"17","E:\\BookStore\\src\\config\\config.js":"18","E:\\BookStore\\src\\component\\bookStore-home\\Card.jsx":"19"},{"size":517,"mtime":1629202888471,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1629202888472,"results":"22","hashOfConfig":"21"},{"size":839,"mtime":1629304035598,"results":"23","hashOfConfig":"21"},{"size":2171,"mtime":1629203123507,"results":"24","hashOfConfig":"21"},{"size":2143,"mtime":1629304035601,"results":"25","hashOfConfig":"21"},{"size":2452,"mtime":1629203123503,"results":"26","hashOfConfig":"21"},{"size":1717,"mtime":1629203123510,"results":"27","hashOfConfig":"21"},{"size":746,"mtime":1629304036017,"results":"28","hashOfConfig":"21"},{"size":7011,"mtime":1629304137895,"results":"29","hashOfConfig":"21"},{"size":1633,"mtime":1629203123504,"results":"30","hashOfConfig":"21"},{"size":1093,"mtime":1629203123506,"results":"31","hashOfConfig":"21"},{"size":4802,"mtime":1629304035603,"results":"32","hashOfConfig":"21"},{"size":3131,"mtime":1629304035600,"results":"33","hashOfConfig":"21"},{"size":1429,"mtime":1629203123508,"results":"34","hashOfConfig":"21"},{"size":312,"mtime":1629203123511,"results":"35","hashOfConfig":"21"},{"size":1180,"mtime":1629203123512,"results":"36","hashOfConfig":"21"},{"size":543,"mtime":1629304035947,"results":"37","hashOfConfig":"21"},{"size":61,"mtime":1629203123514,"results":"38","hashOfConfig":"21"},{"size":1373,"mtime":1629304035913,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mp7z03",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\BookStore\\src\\index.js",[],"E:\\BookStore\\src\\reportWebVitals.js",[],"E:\\BookStore\\src\\App.js",[],"E:\\BookStore\\src\\component\\bookStore-cart\\bookStore-cart.jsx",[],"E:\\BookStore\\src\\component\\bookStore-Login\\BookStore-Main.jsx",[],"E:\\BookStore\\src\\component\\OrderPlaced\\Orderplaced.jsx",[],"E:\\BookStore\\src\\component\\bookStore-home\\bookStore-home.jsx",[],"E:\\BookStore\\src\\service\\StoreService.js",[],"E:\\BookStore\\src\\component\\bookStore-cart\\CustomerForm.jsx",["81"],"import React from 'react';\r\nimport '../bookStore-cart/CustomerForm.scss';\r\nimport {TextField} from '@material-ui/core';\r\nimport { TextareaAutosize } from '@material-ui/core';\r\nimport StoreService from '../../service/StoreService';\r\nclass CustomerForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name:'',\r\n            id:'',\r\n            phoneNumber:'',\r\n            pinCode:'',\r\n            locality:'',\r\n            landmark:'',\r\n            town:'',\r\n            type:'',\r\n            address:'',\r\n            errorMessage:false,\r\n            textError:\"\",\r\n            numberError:\"\",\r\n            pinCodeError:\"\"\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        // let id = this.props.match.params.id;\r\n        // if(id !== undefined && id !==''){\r\n        //     new StoreService().getUserById(id)\r\n        //     .then(responseDTO => {\r\n        //         let responseData = responseDTO.data;\r\n        //         this.setCustomerForm(responseData.data);\r\n        //     }).catch(error => {\r\n        //         console.log(\"Error while Fetching Data\"+JSON.stringify(error));\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    handleNameChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        });\r\n        let nameRegex=RegExp(\"^[A-Z]{1}[a-zA-Z\\\\s]{2,}$\");\r\n        if(!nameRegex.test(e.target.value)){\r\n          this.setState({\r\n            textError:\"Invalid Name Format\",\r\n            errorMessage:true\r\n          })\r\n        }\r\n        else{\r\n          this.setState({textError:\"\"});\r\n        }\r\n      }\r\n\r\n      handleNumberChange=(e)=>{\r\n        this.setState({\r\n            [e.target.phoneNumber]:e.target.value\r\n        });\r\n        let phoneNumberRegex=RegExp(\"[+]{0,1}[0-9]{1,}\\\\s{0,1}[1-9]{1}[0-9]{9}$\");\r\n        if(!phoneNumberRegex.test(e.target.value)){\r\n          this.setState({\r\n            numberError:\"Invalid Phone Number\",\r\n            errorMessage:true\r\n          })\r\n        }\r\n        else{\r\n          this.setState({numberError:\"\"});\r\n        }\r\n      }\r\n\r\n      handlepinCodeChange=(e)=>{\r\n        this.setState({\r\n            [e.target.pinCode]:e.target.value\r\n        });\r\n        let pinCodeRegex=RegExp(\"^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$\");\r\n        if(!pinCodeRegex.test(e.target.value)){\r\n          this.setState({\r\n            pinCodeError:\"Invalid Pin Code\",\r\n            errorMessage:true\r\n          })\r\n        }\r\n        else{\r\n          this.setState({pinCodeError:\"\"});\r\n        }\r\n      }\r\n\r\n    setCustomerForm = (customerData) => {\r\n        this.setState({\r\n            id:customerData.id,\r\n            name:customerData.name,\r\n            phoneNumber:customerData.phoneNumber\r\n        })\r\n    }\r\n\r\n    save = async (event) => {\r\n        event.preventDefault();\r\n        console.log(\"save button clicked\");\r\n        if(this.state.isErrorForName || this.state.isErrorForDate || this.state.isErrorForSalary){\r\n            window.alert(\"Please Fill correct values\");\r\n        }else{\r\n            let customerObject = {\r\n                id:this.state.id,\r\n                pinCode:this.state.pinCode,\r\n                locality:this.state.locality,\r\n                address:this.state.address,\r\n                landmark:this.state.landmark,\r\n                town:this.state.town,\r\n                type:this.state.type\r\n            }\r\n            new StoreService().updateUser(customerObject)\r\n            .then(responseText => {\r\n                console.log(\"Data updated successfully\" +JSON.stringify(responseText.data));\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error While Adding Data\"+JSON.stringify(error));\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"main-container\">\r\n                <h3 className=\"form-title\">Customer Details</h3>\r\n               <form className='customerform' action=\"#\" onSubmit={(e)=>this.save(e)}>\r\n                   <div className=\"form-container\">\r\n                       <div className=\"form-input\">\r\n                            <div className=\"row\">\r\n                                <TextField className=\"text-input\"  label=\"Name\" variant='outlined' onChange={(e)=>{this.handleNameChange(e)}} style={{marginRight: '1.5%'}} size='medium'/>\r\n                                <error-output className=\"text-error\" htmlFor=\"error\">{this.state.textError}</error-output>                               \r\n                                <TextField className=\"text-input\" type=\"text\" variant='outlined' onChange={(e)=>{this.handleNumberChange(e)}}  label=\"Phone Number\" />\r\n                                <error-output className=\"text-error\" htmlFor=\"error\">{this.state.numberError}</error-output>  \r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <TextField className=\"text-input\" type=\"text\" label=\"Pincode\" variant='outlined' onChange={(e)=>{this.handlepinCodeChange(e)}} style={{ marginRight: '1.5%'}}/>\r\n                                <error-output className=\"text-error\" htmlFor=\"error\">{this.state.pinCodeError}</error-output>\r\n                                <TextField className=\"text-input\" type=\"text\" label=\"Locality\" variant='outlined'/>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <TextField className=\"textarea\" label=\"Address\" variant='outlined' multiline={true} maxRows={5} />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <TextField className=\"text-input\" type=\"text\" label=\"city/town\" variant='outlined' style={{ marginRight: '1.5%'}}/>\r\n                                <TextField className=\"text-input\" type=\"text\" label=\"Landmark\" variant='outlined'/>\r\n                            </div>\r\n                            <div className=\"radio-row\">\r\n                                <label className=\"type-label\">Type</label><br/>\r\n                                <input className=\"radio-input\" name=\"radio\"type=\"radio\"></input>\r\n                                <label className=\"radio-label\">Home</label>\r\n                                <input className=\"radio-input radio\" name=\"radio\" type=\"radio\"></input>\r\n                                <label className=\"radio-label\">Work</label>\r\n                                <input className=\"radio-input radio\" name=\"radio\" type=\"radio\"></input>\r\n                                <label className=\"radio-label\">Others</label>\r\n                            </div>\r\n                       </div>\r\n                       <div className=\"button-input\">\r\n                           <button onClick={(e)=>this.props.togglePanelSummary(e)}className=\"continue-button\"type=\"submit\">Continue</button>\r\n                       </div>\r\n                   </div>\r\n                </form> \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\nexport default CustomerForm;","E:\\BookStore\\src\\component\\bookStore-cart\\CartPage.jsx",[],"E:\\BookStore\\src\\component\\bookStore-cart\\OrderSummary.jsx",[],"E:\\BookStore\\src\\component\\bookStore-Login\\BookStore-Register.jsx",["82","83"],"import React from \"react\";\r\nimport loginImg from \"../../images/login.svg\";\r\nimport './Login-Register.scss';\r\nimport StoreService from \"../../service/StoreService\";\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      id:\"\",\r\n      name:\"\",\r\n      number:\"\",\r\n      email:\"\",\r\n      password:\"\",\r\n      errorMessage:false,\r\n      textError:\"\",\r\n      numberError:\"\",\r\n      emailError:\"\",\r\n      passwordError:\"\"\r\n  }\r\n  }\r\n  handleNameChange=(e)=>{\r\n    this.setState({\r\n        [e.target.name]:e.target.value\r\n    });\r\n    let nameRegex=RegExp(\"^[A-Z]{1}[a-zA-Z\\\\s]{2,}$\");\r\n    if(!nameRegex.test(e.target.value)){\r\n      this.setState({\r\n        textError:\"Invalid Name Format\",\r\n        errorMessage:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({textError:\"\",\r\n      errorMessage:false});\r\n    }\r\n  }\r\n  handleNumberChange=(e)=>{\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    });\r\n    let numberRegex=RegExp(\"\\\\d{2}\\\\d{10}\");\r\n    if(!numberRegex.test(e.target.value)){\r\n      this.setState({\r\n      numberError:\"Invalid Number Format\",\r\n      errorMessage:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({numberError:\"\",\r\n      errorMessage:false});\r\n    }\r\n  }\r\n  handleEmailChange=(e)=>{\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    });\r\n    let emailRegex=RegExp(\"^[A-Za-z0-9-\\\\+]+(\\\\.[A-Za-z0-9-]+)*@\" + \"[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\");\r\n    if(!emailRegex.test(e.target.value)){\r\n      this.setState({\r\n      emailError:\"Invalid Email Format\",\r\n      errorMessage:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({emailError:\"\",\r\n      errorMessage:false});\r\n    }\r\n  }\r\n  handlePasswordChange=(e)=>{\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    });\r\n    let passwordRegex=RegExp(\"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&*-+=()]).{8,}$\");\r\n    if(!passwordRegex.test(e.target.value)){\r\n      this.setState({\r\n      passwordError:\"Invalid Password\",\r\n      errorMessage:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({passwordError:\"\",\r\n      errorMessage:false});\r\n    }\r\n  }\r\n  save=async(e)=>{\r\n    e.preventDefault();\r\n    if(this.state.errorMessage===true){\r\n        window.alert(\"Please enter valid data\");\r\n    }\r\n    else{\r\n      let userObject={\r\n          name:this.state.username,\r\n          emailId:this.state.email,\r\n          password:this.state.password,\r\n          phoneNumber:this.state.phoneNumber\r\n      }\r\n      new StoreService().addUser(userObject)\r\n      .then(response=>{\r\n      console.log(\"Data Added Successfully\"+JSON.stringify(response.data));\r\n      window.alert(\"User Registered Successfully\");\r\n      })\r\n      .catch(error=>{\r\n      console.log(\"Error in Adding data\"+JSON.stringify(error));\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"base-container\" ref={this.props.containerRef}>\r\n        <div className=\"header\">Register</div>\r\n        <div className=\"content\">\r\n          <div className=\"image\">\r\n            <img src={loginImg} />\r\n          </div>\r\n          <form className=\"form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Name</label>\r\n              <input type=\"text\" name=\"username\"  onChange={(e)=>{this.handleNameChange(e)}} placeholder=\"Username\" />\r\n              <error-output className=\"text-error\" htmlFor=\"error\">{this.state.textError}</error-output>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" name=\"email\"  onChange={(e)=>{this.handleEmailChange(e)}} placeholder=\"Email\" />\r\n              <error-output className=\"email-error\" htmlFor=\"error\">{this.state.emailError}</error-output>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n              <input type=\"text\" name=\"phoneNumber\"  onChange={(e)=>{this.handleNumberChange(e)}} placeholder=\"Phone Number\" />\r\n              <error-output className=\"number-error\" htmlFor=\"error\">{this.state.numberError}</error-output>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type=\"password\" name=\"password\"  onChange={(e)=>{this.handlePasswordChange(e)}} placeholder=\"Password\" />\r\n              <error-output className=\"password-error\" htmlFor=\"error\">{this.state.passwordError}</error-output>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <button type=\"submit\" onClick={(e)=>{this.save(e)}} className=\"btn\">\r\n            Register\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Register;","E:\\BookStore\\src\\component\\bookStore-Login\\BookStore-Login.jsx",["84","85"],"import React from \"react\";\r\nimport loginImg from \"../../images/login.svg\";\r\nimport './Login-Register.scss';\r\nimport StoreService from \"../../service/StoreService\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email:'',\r\n      password:'',\r\n      emailError:'',\r\n      passwordError:'',\r\n      isError:''\r\n    }\r\n  }\r\n\r\n  handleEmailChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    });\r\n    let emailRegex=RegExp(\"^[A-Za-z0-9-\\\\+]+(\\\\.[A-Za-z0-9-]+)*@\" + \"[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\");\r\n    if(!emailRegex.test(e.target.value)){\r\n      this.setState({\r\n      emailError:\"Invalid Email Format\",\r\n      isError:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({emailError:\"\",\r\n      isError:false});\r\n    }\r\n  }\r\n\r\n  handlePasswordChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    });\r\n    let passwordRegex=RegExp(\"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&*-+=()]).{8,}$\");\r\n    if(!passwordRegex.test(e.target.value)){\r\n      this.setState({\r\n      passwordError:\"Invalid Password\",\r\n      isError:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({passwordError:\"\",\r\n      isError:false});\r\n    }\r\n  }\r\n\r\n  login = (e) => {\r\n    if(this.state.isError===true){\r\n      window.alert(\"Please enter valid data\");\r\n  }\r\n  else{\r\n    let userDetails={\r\n        emailId:this.state.email,\r\n        password:this.state.password\r\n    }\r\n    new StoreService().loginUser(userDetails)\r\n    .then(response=>{\r\n      let data = response.data;\r\n      localStorage.setItem(\"userId\",data.data);\r\n      console.log(data.data);\r\n      window.location.replace('/');\r\n    })\r\n    .catch(error=>{\r\n    window.alert(\"User Does Not Exist\");\r\n    console.log(\"Error While Login\"+JSON.stringify(error));\r\n    })\r\n  }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"base-container\" ref={this.props.containerRef}>\r\n        <div className=\"header\">Login</div>\r\n        <div className=\"content\">\r\n          <div className=\"image\">\r\n            <img src={loginImg} />\r\n          </div>\r\n          <div className=\"form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"text\" name=\"email\" onChange={(e)=>{this.handleEmailChange(e)}} placeholder=\"Email Address\" />\r\n              <error-output className=\"email-error\" htmlFor=\"error\">{this.state.emailError}</error-output>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type=\"password\" name=\"password\" onChange={(e) => {this.handlePasswordChange(e)}} placeholder=\"password\" />\r\n              <error-output className=\"password-error\" htmlFor=\"error\">{this.state.passwordError}</error-output>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <button type=\"button\" onClick={(e) => {this.login(e)}} className=\"btn\">\r\n            Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;","E:\\BookStore\\src\\component\\bookStore-home\\BookDetails.jsx",[],"E:\\BookStore\\src\\component\\footer\\footer.jsx",[],"E:\\BookStore\\src\\component\\navigationBar\\NavigationBar.jsx",[],"E:\\BookStore\\src\\service\\AxiosService.js",[],"E:\\BookStore\\src\\config\\config.js",[],"E:\\BookStore\\src\\component\\bookStore-home\\Card.jsx",[],{"ruleId":"86","severity":1,"message":"87","line":4,"column":10,"nodeType":"88","messageId":"89","endLine":4,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":58,"column":67,"nodeType":"92","messageId":"93","endLine":58,"endColumn":68},{"ruleId":"94","severity":1,"message":"95","line":115,"column":13,"nodeType":"96","endLine":115,"endColumn":35},{"ruleId":"90","severity":1,"message":"91","line":22,"column":67,"nodeType":"92","messageId":"93","endLine":22,"endColumn":68},{"ruleId":"94","severity":1,"message":"95","line":81,"column":13,"nodeType":"96","endLine":81,"endColumn":35},"no-unused-vars","'TextareaAutosize' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]