[{"D:\\BookStore\\src\\index.js":"1","D:\\BookStore\\src\\reportWebVitals.js":"2","D:\\BookStore\\src\\App.js":"3","D:\\BookStore\\src\\component\\bookStore-Login\\BookStore-Main.jsx":"4","D:\\BookStore\\src\\component\\bookStore-cart\\bookStore-cart.jsx":"5","D:\\BookStore\\src\\component\\bookStore-home\\bookStore-home.jsx":"6","D:\\BookStore\\src\\component\\OrderPlaced\\Orderplaced.jsx":"7","D:\\BookStore\\src\\component\\bookStore-Login\\BookStore-Login.jsx":"8","D:\\BookStore\\src\\component\\bookStore-Login\\BookStore-Register.jsx":"9","D:\\BookStore\\src\\service\\StoreService.js":"10","D:\\BookStore\\src\\component\\footer\\footer.jsx":"11","D:\\BookStore\\src\\component\\bookStore-cart\\CustomerForm.jsx":"12","D:\\BookStore\\src\\component\\bookStore-cart\\OrderSummary.jsx":"13","D:\\BookStore\\src\\component\\bookStore-home\\BookDetails.jsx":"14","D:\\BookStore\\src\\component\\bookStore-cart\\CartPage.jsx":"15","D:\\BookStore\\src\\component\\navigationBar\\NavigationBar.jsx":"16","D:\\BookStore\\src\\config\\config.js":"17","D:\\BookStore\\src\\service\\AxiosService.js":"18","D:\\BookStore\\src\\component\\bookStore-home\\Card.jsx":"19"},{"size":517,"mtime":1629367735798,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1629367735798,"results":"22","hashOfConfig":"21"},{"size":839,"mtime":1629367735782,"results":"23","hashOfConfig":"21"},{"size":2143,"mtime":1629819256834,"results":"24","hashOfConfig":"21"},{"size":2193,"mtime":1629808683013,"results":"25","hashOfConfig":"21"},{"size":1690,"mtime":1629808683014,"results":"26","hashOfConfig":"21"},{"size":2544,"mtime":1629808683007,"results":"27","hashOfConfig":"21"},{"size":3650,"mtime":1629820697267,"results":"28","hashOfConfig":"21"},{"size":5025,"mtime":1629820738599,"results":"29","hashOfConfig":"21"},{"size":977,"mtime":1629808683016,"results":"30","hashOfConfig":"21"},{"size":312,"mtime":1629367735782,"results":"31","hashOfConfig":"21"},{"size":8207,"mtime":1629808683012,"results":"32","hashOfConfig":"21"},{"size":3302,"mtime":1629808683012,"results":"33","hashOfConfig":"21"},{"size":968,"mtime":1629808683013,"results":"34","hashOfConfig":"21"},{"size":1483,"mtime":1629808683011,"results":"35","hashOfConfig":"21"},{"size":2460,"mtime":1629808683015,"results":"36","hashOfConfig":"21"},{"size":61,"mtime":1629367735798,"results":"37","hashOfConfig":"21"},{"size":543,"mtime":1629367735798,"results":"38","hashOfConfig":"21"},{"size":2127,"mtime":1629808683013,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"9l1j43",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\BookStore\\src\\index.js",[],["83","84"],"D:\\BookStore\\src\\reportWebVitals.js",[],"D:\\BookStore\\src\\App.js",[],"D:\\BookStore\\src\\component\\bookStore-Login\\BookStore-Main.jsx",[],"D:\\BookStore\\src\\component\\bookStore-cart\\bookStore-cart.jsx",[],"D:\\BookStore\\src\\component\\bookStore-home\\bookStore-home.jsx",["85"],"import React from 'react';\r\nimport '../bookStore-home/bookStore-home.scss';\r\nimport BookDetails from './BookDetails';\r\nimport BookService from '../../service/StoreService';\r\nimport NavigationBar from '../navigationBar/NavigationBar';\r\nimport Footer from '../footer/footer'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nclass BookStoreHome extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            bookData : [],\r\n            cartNumber:0\r\n        };\r\n        this.bookservice = new BookService();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getBookData();\r\n        this.setState({cartNumber:localStorage.getItem(\"number\") || 0})\r\n    }\r\n\r\n    changeCartNumber = () => {\r\n        this.setState({cartNumber:localStorage.getItem(\"number\") || 0})\r\n    }\r\n    getBookData = () => {\r\n        this.bookservice.getAllBooks()\r\n        .then(responseDTO => {\r\n            let books = responseDTO.data;\r\n            this.setState({bookData:books.data});\r\n        }).catch(error => {\r\n            console.log(\"Error while Getting Data From Server\");\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <div>\r\n                <NavigationBar \r\n                cartNumber = {this.state.cartNumber}\r\n                />\r\n            </div>\r\n                <div>\r\n                    <BookDetails\r\n                      BookData = {this.state.bookData}\r\n                      change = {this.changeCartNumber}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Footer/>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\nexport default BookStoreHome","D:\\BookStore\\src\\component\\OrderPlaced\\Orderplaced.jsx",[],"D:\\BookStore\\src\\component\\bookStore-Login\\BookStore-Login.jsx",["86","87"],"D:\\BookStore\\src\\component\\bookStore-Login\\BookStore-Register.jsx",["88","89"],"D:\\BookStore\\src\\service\\StoreService.js",[],"D:\\BookStore\\src\\component\\footer\\footer.jsx",[],"D:\\BookStore\\src\\component\\bookStore-cart\\CustomerForm.jsx",["90"],"import React from 'react';\r\nimport '../bookStore-cart/CustomerForm.scss';\r\nimport {TextField} from '@material-ui/core';\r\nimport { TextareaAutosize } from '@material-ui/core';\r\nimport StoreService from '../../service/StoreService';\r\nclass CustomerForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name:'',\r\n            emailId:'',\r\n            password:'',\r\n            id:'',\r\n            phoneNumber:'',\r\n            pinCode:'',\r\n            locality:'',\r\n            landmark:'',\r\n            town:'',\r\n            type:'',\r\n            address:'',\r\n            textError:\"\",\r\n            numberError:\"\",\r\n            pinCodeError:\"\",\r\n            isError:'',\r\n            isFilled:false,\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n            new StoreService().getUserById(localStorage.getItem(\"userId\"))\r\n             .then(responseDTO => {\r\n                let responseData = responseDTO.data;\r\n                this.setCustomerForm(responseData.data);\r\n            }).catch(error => {\r\n                console.log(\"Error while Fetching Data\"+JSON.stringify(error));\r\n             })\r\n    }\r\n\r\n    handleNameChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        });\r\n        let nameRegex=RegExp(\"^[A-Z]{1}[a-zA-Z\\\\s]{2,}$\");\r\n        if(!nameRegex.test(e.target.value)){\r\n          this.setState({\r\n            textError:\"Invalid Name Format\",\r\n            isError:true\r\n          })\r\n        }\r\n        else{\r\n          this.setState({textError:\"\",\r\n          isError:false})\r\n        }\r\n    }\r\n\r\n    handleNumberChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        });\r\n        let phoneNumberRegex=RegExp(\"[+]{0,1}[0-9]{1,}\\\\s{0,1}[1-9]{1}[0-9]{9}$\");\r\n        if(!phoneNumberRegex.test(e.target.value)){\r\n          this.setState({\r\n            numberError:\"Invalid Phone Number\",\r\n            isError:true\r\n          })\r\n        }\r\n        else{\r\n          this.setState({numberError:\"\",\r\n          isError:false});\r\n        }\r\n    }\r\n\r\n    handlepinCodeChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        });\r\n        let pinCodeRegex=RegExp(\"^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$\");\r\n        if(!pinCodeRegex.test(e.target.value)){\r\n          this.setState({\r\n            pinCodeError:\"Invalid Pin Code\",\r\n            isError:true\r\n          })\r\n        }\r\n        else{\r\n          this.setState({pinCodeError:\"\",\r\n        isError:false});\r\n        }\r\n    }\r\n\r\n    handleLocalityChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    handleCityChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    handleAddressChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    handleLandmarkChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]:e.target.value,\r\n            isFilled:true\r\n        })\r\n    }\r\n\r\n    setCustomerForm = (customerData) => {\r\n        this.setState({\r\n            id:customerData.userId,\r\n            name:customerData.name,\r\n            phoneNumber:customerData.phoneNumber,\r\n            emailId:customerData.emailId,\r\n            password:customerData.password\r\n        })\r\n    }\r\n\r\n    save = async (event) => {\r\n        event.preventDefault();\r\n        console.log(\"save button clicked\");\r\n        if(this.state.isError ||  !this.state.isFilled){\r\n            window.alert(\"Please Fill correct values\");\r\n        }else{\r\n            let customerObject = {\r\n                userId:this.state.id,\r\n                name:this.state.name,\r\n                phoneNumber:this.state.phoneNumber,\r\n                pinCode:this.state.pinCode,\r\n                locality:this.state.locality,\r\n                address:this.state.address,\r\n                landMark:this.state.landmark,\r\n                city:this.state.city,\r\n                password:this.state.password,\r\n                emailId:this.state.emailId,\r\n            }\r\n           new StoreService().updateUser(customerObject)\r\n           .then(responseText => {\r\n            console.log(\"Data updated successfully\" +JSON.stringify(responseText.data));\r\n           }).catch(error => {\r\n               console.log(\"Error While Updating User\",JSON.stringify(error));\r\n           })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"main-container\">\r\n                <h3 className=\"form-title\">Customer Details</h3>\r\n               <form className='customerform' action=\"#\" onSubmit={(e)=>this.save(e)}>\r\n                   <div className=\"form-container\">\r\n                       <div className=\"form-input\">\r\n                            <div className=\"row\">\r\n                                <TextField className=\"text-input\" name=\"name\" label=\"Name\" value={this.state.name} variant='outlined' onChange={(e)=>{this.handleNameChange(e)}} style={{marginRight: '1.5%'}} size='medium'></TextField>\r\n                                <error-output className=\"text-error\" htmlFor=\"error\">{this.state.textError}</error-output>                               \r\n                                <TextField className=\"text-input\" name=\"phoneNumber\" type=\"text\" value={this.state.phoneNumber} variant='outlined' onChange={(e)=>{this.handleNumberChange(e)}}  label=\"Phone Number\" />\r\n                                <error-output className=\"text-error\" htmlFor=\"error\">{this.state.numberError}</error-output>  \r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <TextField className=\"text-input\" type=\"text\" name=\"pinCode\" value={this.state.pinCode} label=\"Pincode\" variant='outlined' onChange={(e)=>{this.handlepinCodeChange(e)}} style={{ marginRight: '1.5%'}}/>\r\n                                <error-output className=\"text-error\" htmlFor=\"error\">{this.state.pinCodeError}</error-output>\r\n                                <TextField className=\"text-input\" value={this.state.locality} name=\"locality\" type=\"text\" label=\"Locality\" variant='outlined' onChange={(e)=>{this.handleLocalityChange(e)}} />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <TextField className=\"textarea\" name=\"address\" value={this.state.address} label=\"Address\" variant='outlined' multiline={true} maxRows={5} onChange={(e)=>{this.handleAddressChange(e)}} />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <TextField className=\"text-input\" name=\"city\" value={this.state.city} type=\"text\" label=\"city/town\" onChange={(e)=>{this.handleCityChange(e)}} variant='outlined' style={{ marginRight: '1.5%'}}/>\r\n                                <TextField className=\"text-input\" name=\"landmark\" value={this.state.landmark} type=\"text\" label=\"Landmark\" variant='outlined'onChange={(e)=>{this.handleLandmarkChange(e)}} />\r\n                            </div>\r\n                            <div className=\"radio-row\">\r\n                                <label className=\"type-label\">Type</label><br/>\r\n                                <input className=\"radio-input\" name=\"radio\"type=\"radio\"></input>\r\n                                <label className=\"radio-label\">Home</label>\r\n                                <input className=\"radio-input radio\" name=\"radio\" type=\"radio\"></input>\r\n                                <label className=\"radio-label\">Work</label>\r\n                                <input className=\"radio-input radio\" name=\"radio\" type=\"radio\"></input>\r\n                                <label className=\"radio-label\">Others</label>\r\n                            </div>\r\n                       </div>\r\n                       <div className=\"button-input\">\r\n                           <button onClick={(e)=>this.props.togglePanelSummary(e)}className=\"continue-button\"type=\"submit\">Continue</button>\r\n                       </div>\r\n                   </div>\r\n                </form> \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\nexport default CustomerForm;","D:\\BookStore\\src\\component\\bookStore-cart\\OrderSummary.jsx",["91","92","93","94","95"],"import React from 'react';\r\nimport { useState,useEffect } from 'react';\r\nimport StoreService from '../../service/StoreService';\r\n\r\nfunction OrderSummary(props){\r\n    const[imageURL,setImageURL] = useState('')\r\n    const[bookName,setBookName] = useState('')\r\n    const[bookPrice,setBookPrice] = useState('')\r\n    const[authorName,setAuthorName] = useState('') \r\n    const[bookId,setBookId] = useState('')\r\n    const[userId,setUserId] = useState('')\r\n    const[totalAmount,setTotalAmount] = useState(0)\r\n    useEffect(() => {\r\n        new StoreService().getBookById(localStorage.getItem(\"bookId\"))\r\n        .then(responseDTO => {\r\n            let bookData = responseDTO.data;\r\n            setImageURL(bookData.data.imageURL)\r\n            setBookName(bookData.data.bookName)\r\n            setAuthorName(bookData.data.authorName);\r\n            setBookPrice(bookData.data.bookPrice)\r\n            setBookId(localStorage.getItem(\"bookId\"))\r\n        }).catch(error => {\r\n            console.log(\"Error while retrieving Book Data\",JSON.stringify(error));\r\n        })\r\n\r\n        new StoreService().getUserById(localStorage.getItem(\"userId\"))\r\n        .then(responseDTO => {\r\n            let responseData = responseDTO.data;\r\n            setUserId(responseData.data.userId)\r\n        }).catch(error => {\r\n            console.log(\"Error while Fetching Data\"+JSON.stringify(error));\r\n        })\r\n\r\n\r\n        let amount = 0;\r\n        JSON.parse(localStorage.getItem(\"cartDetails\")).map((books) => (\r\n           amount = amount + books.price\r\n        ))\r\n        setTotalAmount(amount)\r\n    },[])\r\n\r\n    const placeOrder = () => {\r\n        let order = {\r\n            bookId:bookId,\r\n            userId:userId\r\n        }\r\n        new StoreService().placeOrder(order)\r\n        .then(response => {\r\n            console.log(\"Data Added Successfully\");\r\n        }).catch(error => {\r\n            console.log(\"Error while Posting\",JSON.stringify(error));\r\n        })\r\n\r\n        window.location.replace(\"/summary\")\r\n    }\r\n\r\n    return(\r\n        <div className=\"cart\">\r\n                <div className=\"cart-container\">\r\n                    <div className=\"Book-container\">\r\n                        <div className='summary-title'>Order Summary</div>\r\n                    </div>\r\n                    {\r\n                    JSON.parse(localStorage.getItem(\"cartDetails\")).map((books) => (\r\n                        <div className=\"details\">\r\n                        <div className = \"book-container\">\r\n                                <img className=\"book-cover\" src = {books.imgsrc} alt=\"book-image\"></img>\r\n                            </div>\r\n                        <div className='book-info'>\r\n                        <h4 className='book-title'>{books.bookName}</h4>\r\n                        <p className='author-name'>{books.authorName}</p>\r\n                        <h4>Rs. {books.price}</h4>\r\n                    </div>\r\n                    </div>\r\n                    ))   \r\n                    }\r\n                    <p className = \"amount\">Total Amount Rs. {totalAmount}</p>\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <button className=\"place-order\" onClick={placeOrder} >CHECKOUT</button>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\nexport default OrderSummary","D:\\BookStore\\src\\component\\bookStore-home\\BookDetails.jsx",[],"D:\\BookStore\\src\\component\\bookStore-cart\\CartPage.jsx",["96"],"\r\nimport './CartPage.scss';\r\nfunction CartPage(props) {\r\n        return(\r\n            <div className=\"main\">\r\n                <div className=\"cart\">\r\n                <div className=\"cart-container1\">\r\n                    <div className=\"book-container\">\r\n                        <h4 className='cart-title'>My Cart</h4>\r\n                    </div>\r\n                    {\r\n                        JSON.parse(localStorage.getItem(\"cartDetails\")).map((books) =>(\r\n                            <div className=\"details\">\r\n                            <div className = \"book-container\">\r\n                                <img className=\"book-cover1\" src = {books.imgsrc} alt=\"book-image\"></img>\r\n                            </div>\r\n                             <div className='book-info1'>\r\n                                 <h4 className='book-title'>{books.bookName}</h4>\r\n                                 <p className='author-name'>by {books.authorName}</p>\r\n                                 <h4>Rs. {books.price}</h4>\r\n                                \r\n                             </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"button-container1\">\r\n                    <button className=\"place-order1\" onClick={(e)=>props.togglePanel(e)}>PLACE ORDER</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n            \r\n        );\r\n    }\r\n\r\nexport default CartPage;","D:\\BookStore\\src\\component\\navigationBar\\NavigationBar.jsx",[],"D:\\BookStore\\src\\config\\config.js",[],"D:\\BookStore\\src\\service\\AxiosService.js",[],"D:\\BookStore\\src\\component\\bookStore-home\\Card.jsx",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":29,"column":67,"nodeType":"107","messageId":"108","endLine":29,"endColumn":68},{"ruleId":"109","severity":1,"message":"110","line":91,"column":13,"nodeType":"111","endLine":91,"endColumn":35},{"ruleId":"105","severity":1,"message":"106","line":65,"column":67,"nodeType":"107","messageId":"108","endLine":65,"endColumn":68},{"ruleId":"109","severity":1,"message":"110","line":125,"column":13,"nodeType":"111","endLine":125,"endColumn":35},{"ruleId":"101","severity":1,"message":"112","line":4,"column":10,"nodeType":"103","messageId":"104","endLine":4,"endColumn":26},{"ruleId":"101","severity":1,"message":"113","line":6,"column":11,"nodeType":"103","messageId":"104","endLine":6,"endColumn":19},{"ruleId":"101","severity":1,"message":"114","line":7,"column":11,"nodeType":"103","messageId":"104","endLine":7,"endColumn":19},{"ruleId":"101","severity":1,"message":"115","line":8,"column":11,"nodeType":"103","messageId":"104","endLine":8,"endColumn":20},{"ruleId":"101","severity":1,"message":"116","line":9,"column":11,"nodeType":"103","messageId":"104","endLine":9,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":67,"column":33,"nodeType":"111","endLine":67,"endColumn":99},{"ruleId":"117","severity":1,"message":"118","line":15,"column":33,"nodeType":"111","endLine":15,"endColumn":100},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'Pagination' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TextareaAutosize' is defined but never used.","'imageURL' is assigned a value but never used.","'bookName' is assigned a value but never used.","'bookPrice' is assigned a value but never used.","'authorName' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]