[{"C:\\Users\\rajni\\BookStore\\src\\index.js":"1","C:\\Users\\rajni\\BookStore\\src\\reportWebVitals.js":"2","C:\\Users\\rajni\\BookStore\\src\\App.js":"3","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-Login\\BookStore-Main.jsx":"4","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\bookStore-cart.jsx":"5","C:\\Users\\rajni\\BookStore\\src\\component\\OrderPlaced\\Orderplaced.jsx":"6","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-home\\bookStore-home.jsx":"7","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-Login\\BookStore-Register.jsx":"8","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-Login\\BookStore-Login.jsx":"9","C:\\Users\\rajni\\BookStore\\src\\service\\StoreService.js":"10","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\CustomerForm.jsx":"11","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\OrderSummary.jsx":"12","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\CartPage.jsx":"13","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-home\\BookDetails.jsx":"14","C:\\Users\\rajni\\BookStore\\src\\component\\footer\\footer.jsx":"15","C:\\Users\\rajni\\BookStore\\src\\component\\navigationBar\\NavigationBar.jsx":"16","C:\\Users\\rajni\\BookStore\\src\\service\\AxiosService.js":"17","C:\\Users\\rajni\\BookStore\\src\\config\\config.js":"18","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-home\\Card.jsx":"19"},{"size":517,"mtime":1628853604927,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1628853604929,"results":"22","hashOfConfig":"21"},{"size":1059,"mtime":1629865183552,"results":"23","hashOfConfig":"21"},{"size":2143,"mtime":1629272116349,"results":"24","hashOfConfig":"21"},{"size":2193,"mtime":1629723614346,"results":"25","hashOfConfig":"21"},{"size":2544,"mtime":1629793630484,"results":"26","hashOfConfig":"21"},{"size":1690,"mtime":1629743314995,"results":"27","hashOfConfig":"21"},{"size":5235,"mtime":1629865183554,"results":"28","hashOfConfig":"21"},{"size":3756,"mtime":1629865183553,"results":"29","hashOfConfig":"21"},{"size":977,"mtime":1629437751094,"results":"30","hashOfConfig":"21"},{"size":8207,"mtime":1629797611967,"results":"31","hashOfConfig":"21"},{"size":2683,"mtime":1629876955127,"results":"32","hashOfConfig":"21"},{"size":1483,"mtime":1629793196255,"results":"33","hashOfConfig":"21"},{"size":968,"mtime":1629825385681,"results":"34","hashOfConfig":"21"},{"size":312,"mtime":1628925152752,"results":"35","hashOfConfig":"21"},{"size":2478,"mtime":1629865183566,"results":"36","hashOfConfig":"21"},{"size":543,"mtime":1629355702465,"results":"37","hashOfConfig":"21"},{"size":61,"mtime":1628876518588,"results":"38","hashOfConfig":"21"},{"size":2127,"mtime":1629742561410,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"57ih3n",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\rajni\\BookStore\\src\\index.js",[],["85","86"],"C:\\Users\\rajni\\BookStore\\src\\reportWebVitals.js",[],"C:\\Users\\rajni\\BookStore\\src\\App.js",["87"],"import BookStoreHome from './component/bookStore-home/bookStore-home';\r\nimport  {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\r\nimport BookStoreCart from './component/bookStore-cart/bookStore-cart';\r\nimport OrderPlaced from './component/OrderPlaced/Orderplaced';\r\nimport Main from './component/bookStore-Login/BookStore-Main';\r\nimport Login from './component/bookStore-Login/BookStore-Login';\r\nimport Register from './component/bookStore-Login/BookStore-Register';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <BookStoreHome/>\r\n          </Route>\r\n          <Route path='/cart'>\r\n            <BookStoreCart/>\r\n          </Route>\r\n          <Route path='/summary'>\r\n            <OrderPlaced/>\r\n          </Route>\r\n          <Route path='/login'>\r\n            <Login/>\r\n          </Route>\r\n          <Route path='/register'>\r\n            <Register/>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-Login\\BookStore-Main.jsx",[],"C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\bookStore-cart.jsx",[],"C:\\Users\\rajni\\BookStore\\src\\component\\OrderPlaced\\Orderplaced.jsx",[],"C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-home\\bookStore-home.jsx",["88"],"import React from 'react';\r\nimport '../bookStore-home/bookStore-home.scss';\r\nimport BookDetails from './BookDetails';\r\nimport BookService from '../../service/StoreService';\r\nimport NavigationBar from '../navigationBar/NavigationBar';\r\nimport Footer from '../footer/footer'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nclass BookStoreHome extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            bookData : [],\r\n            cartNumber:0\r\n        };\r\n        this.bookservice = new BookService();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getBookData();\r\n        this.setState({cartNumber:localStorage.getItem(\"number\") || 0})\r\n    }\r\n\r\n    changeCartNumber = () => {\r\n        this.setState({cartNumber:localStorage.getItem(\"number\") || 0})\r\n    }\r\n    getBookData = () => {\r\n        this.bookservice.getAllBooks()\r\n        .then(responseDTO => {\r\n            let books = responseDTO.data;\r\n            this.setState({bookData:books.data});\r\n        }).catch(error => {\r\n            console.log(\"Error while Getting Data From Server\");\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <div>\r\n                <NavigationBar \r\n                cartNumber = {this.state.cartNumber}\r\n                />\r\n            </div>\r\n                <div>\r\n                    <BookDetails\r\n                      BookData = {this.state.bookData}\r\n                      change = {this.changeCartNumber}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Footer/>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\nexport default BookStoreHome","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-Login\\BookStore-Register.jsx",["89","90"],"import React from \"react\";\r\nimport loginImg from \"../../images/login.svg\";\r\nimport './Register.scss';\r\nimport StoreService from \"../../service/StoreService\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      id:\"\",\r\n      name:\"\",\r\n      number:\"\",\r\n      email:\"\",\r\n      password:\"\",\r\n      errorMessage:false,\r\n      textError:\"\",\r\n      numberError:\"\",\r\n      emailError:\"\",\r\n      passwordError:\"\"\r\n  }\r\n\r\n  this.textFieldStyle = {\r\n    margin:'5px',\r\n    width:'300px',\r\n  }\r\n  }\r\n  handleNameChange=(e)=>{\r\n    this.setState({\r\n        [e.target.name]:e.target.value\r\n    });\r\n    let nameRegex=RegExp(\"^[A-Z]{1}[a-zA-Z\\\\s]{2,}$\");\r\n    if(!nameRegex.test(e.target.value)){\r\n      this.setState({\r\n        textError:\"Enter Valid Name e.g.:Abc abc\",\r\n        errorMessage:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({textError:\"\",\r\n      errorMessage:false});\r\n    }\r\n  }\r\n  handleNumberChange=(e)=>{\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    });\r\n    let numberRegex=RegExp(\"\\\\d{2}\\\\d{10}\");\r\n    if(!numberRegex.test(e.target.value)){\r\n      this.setState({\r\n      numberError:\"Enter Valid Number e.g.:917263534327\",\r\n      errorMessage:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({numberError:\"\",\r\n      errorMessage:false});\r\n    }\r\n  }\r\n  handleEmailChange=(e)=>{\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    });\r\n    let emailRegex=RegExp(\"^[A-Za-z0-9-\\\\+]+(\\\\.[A-Za-z0-9-]+)*@\" + \"[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\");\r\n    if(!emailRegex.test(e.target.value)){\r\n      this.setState({\r\n      emailError:\"Enter Valid Mail e.g.:abc124@example.com\",\r\n      errorMessage:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({emailError:\"\",\r\n      errorMessage:false});\r\n    }\r\n  }\r\n  handlePasswordChange=(e)=>{\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    });\r\n    let passwordRegex=RegExp(\"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&*-+=()]).{8,}$\");\r\n    if(!passwordRegex.test(e.target.value)){\r\n      this.setState({\r\n      passwordError:\"Enter Valid Password e.g.:Abc123@cdf \",\r\n      errorMessage:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({passwordError:\"\",\r\n      errorMessage:false});\r\n    }\r\n  }\r\n  save=async(e)=>{\r\n    e.preventDefault();\r\n    if(this.state.errorMessage===true){\r\n        window.alert(\"Please enter valid data\");\r\n    }\r\n    else{\r\n      let userObject={\r\n          name:this.state.username,\r\n          emailId:this.state.email,\r\n          password:this.state.password,\r\n          phoneNumber:this.state.phoneNumber\r\n      }\r\n      new StoreService().addUser(userObject)\r\n      .then(response=>{\r\n      console.log(\"Data Added Successfully\"+JSON.stringify(response.data));\r\n      window.alert(\"User Registered Successfully\");\r\n      window.location.replace('/login')\r\n      })\r\n      .catch(error=>{\r\n      console.log(\"Error in Adding data\"+JSON.stringify(error));\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bookStore-register\">\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n      <div className=\"base-container\" ref={this.props.containerRef}>\r\n        <div className=\"header\">Register</div>\r\n        <div className=\"content\">\r\n          <div className=\"image\">\r\n            <img src={loginImg} />\r\n          </div>\r\n          <form className=\"form\">\r\n              <TextField label='Name' variant='outlined' color='secondary' style={this.textFieldStyle} size='small' type=\"text\" name=\"username\"  onChange={(e)=>{this.handleNameChange(e)}}  />\r\n              <error-output className=\"text-error\" htmlFor=\"error\">{this.state.textError}</error-output>\r\n\r\n\r\n              <TextField label='Email' variant='outlined' color='secondary' style={this.textFieldStyle} size='small' type=\"email\" name=\"email\"  onChange={(e)=>{this.handleEmailChange(e)}}  />\r\n              <error-output className=\"email-error\" htmlFor=\"error\">{this.state.emailError}</error-output>\r\n            \r\n            \r\n              <TextField label='Phone Number' variant='outlined' color='secondary' style={this.textFieldStyle} size='small' type=\"text\" name=\"phoneNumber\"  onChange={(e)=>{this.handleNumberChange(e)}}  />\r\n              <error-output className=\"number-error\" htmlFor=\"error\">{this.state.numberError}</error-output>\r\n            \r\n            \r\n              {/* <label htmlFor=\"password\">Password</label> */}\r\n              <TextField label='Password' variant='outlined' color='secondary' style={this.textFieldStyle} size='small' type=\"password\" name=\"password\"  onChange={(e)=>{this.handlePasswordChange(e)}}  />\r\n              <error-output className=\"password-error\" htmlFor=\"error\">{this.state.passwordError}</error-output>\r\n            \r\n          </form>\r\n        </div>\r\n        <div className=\"footer-register\">\r\n          <Link to=\"/login\"><button type=\"submit\" onClick={(e)=>{this.save(e)}} className=\"btn\">\r\n            Register\r\n          </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Register;","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-Login\\BookStore-Login.jsx",["91","92"],"import React from \"react\";\r\nimport loginImg from \"../../images/login.svg\";\r\nimport './Login.scss';\r\nimport StoreService from \"../../service/StoreService\";\r\nimport {TextField} from '@material-ui/core';\r\nimport { Link } from \"react-router-dom\";\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      email:'',\r\n      password:'',\r\n      emailError:'',\r\n      passwordError:'',\r\n      isError:''\r\n    }\r\n    this.textFieldStyle = {\r\n      height: '35px',\r\n      width:'300px',\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  handleEmailChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    });\r\n    let emailRegex=RegExp(\"^[A-Za-z0-9-\\\\+]+(\\\\.[A-Za-z0-9-]+)*@\" + \"[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$\");\r\n    if(!emailRegex.test(e.target.value)){\r\n      this.setState({\r\n      emailError:\"Enter Valid Mail e.g.:abc124@example.com\",\r\n      isError:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({emailError:\"\",\r\n      isError:false});\r\n    }\r\n  }\r\n\r\n  handlePasswordChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]:e.target.value\r\n    });\r\n    let passwordRegex=RegExp(\"(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&*-+=()]).{8,}$\");\r\n    if(!passwordRegex.test(e.target.value)){\r\n      this.setState({\r\n      passwordError:\"Enter Valid Password e.g.:Abc123@cdf\",\r\n      isError:true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({passwordError:\"\",\r\n      isError:false});\r\n    }\r\n  }\r\n\r\n  login = (e) => {\r\n    if(this.state.isError===true){\r\n      window.alert(\"Please enter valid data\");\r\n  }\r\n  else{\r\n    let userDetails={\r\n        emailId:this.state.email,\r\n        password:this.state.password\r\n    }\r\n    new StoreService().loginUser(userDetails)\r\n    .then(response=>{\r\n      let data = response.data;\r\n      localStorage.setItem(\"userId\",data.data);\r\n      console.log(data.data);\r\n      window.location.replace('/');\r\n    })\r\n    .catch(error=>{\r\n    window.alert(\"User Does Not Exist\");\r\n    console.log(\"Error While Login\"+JSON.stringify(error));\r\n    })\r\n  }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bookStore-login\">\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n      <div className=\"base-container-login\" ref={this.props.containerRef}>\r\n        <div className=\"header\">Login</div>\r\n        <div className=\"content\">\r\n          <div className=\"image\">\r\n            <img src={loginImg} />\r\n          </div>\r\n          <div className=\"form\">\r\n            <div>\r\n              <br />\r\n              <TextField label='Email' variant='outlined' color='secondary' style={this.textFieldStyle} size=\"small\" type=\"text\" name=\"email\" required=\"\" onChange={(e)=>{this.handleEmailChange(e)}} />\r\n              <br />\r\n              <error-output className=\"email-error\" htmlFor=\"error\">{this.state.emailError}</error-output>\r\n            </div>\r\n            <div>\r\n              <TextField label='Password' color='secondary' style={this.textFieldStyle} variant='outlined' size=\"small\" type=\"password\" name=\"password\" onChange={(e) => {this.handlePasswordChange(e)}}/>\r\n              <br />\r\n              <error-output className=\"password-error\" htmlFor=\"error\">{this.state.passwordError}</error-output>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <button type=\"button\" onClick={(e) => {this.login(e)}} className=\"btn\">\r\n            Login\r\n          </button>\r\n          <div className=\"or\"> OR </div>\r\n          <Link to=\"/register\"><button type=\"button\" className=\"btn\" >\r\n          Create A New User\r\n          </button>\r\n          </Link>\r\n        \r\n        </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;","C:\\Users\\rajni\\BookStore\\src\\service\\StoreService.js",[],"C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\CustomerForm.jsx",["93"],"import React from 'react';\r\nimport '../bookStore-cart/CustomerForm.scss';\r\nimport {TextField} from '@material-ui/core';\r\nimport { TextareaAutosize } from '@material-ui/core';\r\nimport StoreService from '../../service/StoreService';\r\nclass CustomerForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name:'',\r\n            emailId:'',\r\n            password:'',\r\n            id:'',\r\n            phoneNumber:'',\r\n            pinCode:'',\r\n            locality:'',\r\n            landmark:'',\r\n            town:'',\r\n            type:'',\r\n            address:'',\r\n            textError:\"\",\r\n            numberError:\"\",\r\n            pinCodeError:\"\",\r\n            isError:'',\r\n            isFilled:false,\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n            new StoreService().getUserById(localStorage.getItem(\"userId\"))\r\n             .then(responseDTO => {\r\n                let responseData = responseDTO.data;\r\n                this.setCustomerForm(responseData.data);\r\n            }).catch(error => {\r\n                console.log(\"Error while Fetching Data\"+JSON.stringify(error));\r\n             })\r\n    }\r\n\r\n    handleNameChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        });\r\n        let nameRegex=RegExp(\"^[A-Z]{1}[a-zA-Z\\\\s]{2,}$\");\r\n        if(!nameRegex.test(e.target.value)){\r\n          this.setState({\r\n            textError:\"Invalid Name Format\",\r\n            isError:true\r\n          })\r\n        }\r\n        else{\r\n          this.setState({textError:\"\",\r\n          isError:false})\r\n        }\r\n    }\r\n\r\n    handleNumberChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        });\r\n        let phoneNumberRegex=RegExp(\"[+]{0,1}[0-9]{1,}\\\\s{0,1}[1-9]{1}[0-9]{9}$\");\r\n        if(!phoneNumberRegex.test(e.target.value)){\r\n          this.setState({\r\n            numberError:\"Invalid Phone Number\",\r\n            isError:true\r\n          })\r\n        }\r\n        else{\r\n          this.setState({numberError:\"\",\r\n          isError:false});\r\n        }\r\n    }\r\n\r\n    handlepinCodeChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        });\r\n        let pinCodeRegex=RegExp(\"^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$\");\r\n        if(!pinCodeRegex.test(e.target.value)){\r\n          this.setState({\r\n            pinCodeError:\"Invalid Pin Code\",\r\n            isError:true\r\n          })\r\n        }\r\n        else{\r\n          this.setState({pinCodeError:\"\",\r\n        isError:false});\r\n        }\r\n    }\r\n\r\n    handleLocalityChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    handleCityChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    handleAddressChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    handleLandmarkChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]:e.target.value,\r\n            isFilled:true\r\n        })\r\n    }\r\n\r\n    setCustomerForm = (customerData) => {\r\n        this.setState({\r\n            id:customerData.userId,\r\n            name:customerData.name,\r\n            phoneNumber:customerData.phoneNumber,\r\n            emailId:customerData.emailId,\r\n            password:customerData.password\r\n        })\r\n    }\r\n\r\n    save = async (event) => {\r\n        event.preventDefault();\r\n        console.log(\"save button clicked\");\r\n        if(this.state.isError ||  !this.state.isFilled){\r\n            window.alert(\"Please Fill correct values\");\r\n        }else{\r\n            let customerObject = {\r\n                userId:this.state.id,\r\n                name:this.state.name,\r\n                phoneNumber:this.state.phoneNumber,\r\n                pinCode:this.state.pinCode,\r\n                locality:this.state.locality,\r\n                address:this.state.address,\r\n                landMark:this.state.landmark,\r\n                city:this.state.city,\r\n                password:this.state.password,\r\n                emailId:this.state.emailId,\r\n            }\r\n           new StoreService().updateUser(customerObject)\r\n           .then(responseText => {\r\n            console.log(\"Data updated successfully\" +JSON.stringify(responseText.data));\r\n           }).catch(error => {\r\n               console.log(\"Error While Updating User\",JSON.stringify(error));\r\n           })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"main-container\">\r\n                <h3 className=\"form-title\">Customer Details</h3>\r\n               <form className='customerform' action=\"#\" onSubmit={(e)=>this.save(e)}>\r\n                   <div className=\"form-container\">\r\n                       <div className=\"form-input\">\r\n                            <div className=\"row\">\r\n                                <TextField className=\"text-input\" name=\"name\" label=\"Name\" value={this.state.name} variant='outlined' onChange={(e)=>{this.handleNameChange(e)}} style={{marginRight: '1.5%'}} size='medium'></TextField>\r\n                                <error-output className=\"text-error\" htmlFor=\"error\">{this.state.textError}</error-output>                               \r\n                                <TextField className=\"text-input\" name=\"phoneNumber\" type=\"text\" value={this.state.phoneNumber} variant='outlined' onChange={(e)=>{this.handleNumberChange(e)}}  label=\"Phone Number\" />\r\n                                <error-output className=\"text-error\" htmlFor=\"error\">{this.state.numberError}</error-output>  \r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <TextField className=\"text-input\" type=\"text\" name=\"pinCode\" value={this.state.pinCode} label=\"Pincode\" variant='outlined' onChange={(e)=>{this.handlepinCodeChange(e)}} style={{ marginRight: '1.5%'}}/>\r\n                                <error-output className=\"text-error\" htmlFor=\"error\">{this.state.pinCodeError}</error-output>\r\n                                <TextField className=\"text-input\" value={this.state.locality} name=\"locality\" type=\"text\" label=\"Locality\" variant='outlined' onChange={(e)=>{this.handleLocalityChange(e)}} />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <TextField className=\"textarea\" name=\"address\" value={this.state.address} label=\"Address\" variant='outlined' multiline={true} maxRows={5} onChange={(e)=>{this.handleAddressChange(e)}} />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <TextField className=\"text-input\" name=\"city\" value={this.state.city} type=\"text\" label=\"city/town\" onChange={(e)=>{this.handleCityChange(e)}} variant='outlined' style={{ marginRight: '1.5%'}}/>\r\n                                <TextField className=\"text-input\" name=\"landmark\" value={this.state.landmark} type=\"text\" label=\"Landmark\" variant='outlined'onChange={(e)=>{this.handleLandmarkChange(e)}} />\r\n                            </div>\r\n                            <div className=\"radio-row\">\r\n                                <label className=\"type-label\">Type</label><br/>\r\n                                <input className=\"radio-input\" name=\"radio\"type=\"radio\"></input>\r\n                                <label className=\"radio-label\">Home</label>\r\n                                <input className=\"radio-input radio\" name=\"radio\" type=\"radio\"></input>\r\n                                <label className=\"radio-label\">Work</label>\r\n                                <input className=\"radio-input radio\" name=\"radio\" type=\"radio\"></input>\r\n                                <label className=\"radio-label\">Others</label>\r\n                            </div>\r\n                       </div>\r\n                       <div className=\"button-input\">\r\n                           <button onClick={(e)=>this.props.togglePanelSummary(e)}className=\"continue-button\"type=\"submit\">Continue</button>\r\n                       </div>\r\n                   </div>\r\n                </form> \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\nexport default CustomerForm;","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\OrderSummary.jsx",["94"],"C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-cart\\CartPage.jsx",["95"],"\r\nimport './CartPage.scss';\r\nfunction CartPage(props) {\r\n        return(\r\n            <div className=\"main\">\r\n                <div className=\"cart\">\r\n                <div className=\"cart-container1\">\r\n                    <div className=\"book-container\">\r\n                        <h4 className='cart-title'>My Cart</h4>\r\n                    </div>\r\n                    {\r\n                        JSON.parse(localStorage.getItem(\"cartDetails\")).map((books) =>(\r\n                            <div className=\"details\">\r\n                            <div className = \"book-container\">\r\n                                <img className=\"book-cover1\" src = {books.imgsrc} alt=\"book-image\"></img>\r\n                            </div>\r\n                             <div className='book-info1'>\r\n                                 <h4 className='book-title'>{books.bookName}</h4>\r\n                                 <p className='author-name'>by {books.authorName}</p>\r\n                                 <h4>Rs. {books.price}</h4>\r\n                                \r\n                             </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"button-container1\">\r\n                    <button className=\"place-order1\" onClick={(e)=>props.togglePanel(e)}>PLACE ORDER</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n            \r\n        );\r\n    }\r\n\r\nexport default CartPage;","C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-home\\BookDetails.jsx",[],"C:\\Users\\rajni\\BookStore\\src\\component\\footer\\footer.jsx",[],"C:\\Users\\rajni\\BookStore\\src\\component\\navigationBar\\NavigationBar.jsx",[],"C:\\Users\\rajni\\BookStore\\src\\service\\AxiosService.js",[],"C:\\Users\\rajni\\BookStore\\src\\config\\config.js",[],"C:\\Users\\rajni\\BookStore\\src\\component\\bookStore-home\\Card.jsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":12},{"ruleId":"100","severity":1,"message":"104","line":7,"column":8,"nodeType":"102","messageId":"103","endLine":7,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":66,"column":67,"nodeType":"107","messageId":"108","endLine":66,"endColumn":68},{"ruleId":"109","severity":1,"message":"110","line":127,"column":13,"nodeType":"111","endLine":127,"endColumn":35},{"ruleId":"105","severity":1,"message":"106","line":30,"column":67,"nodeType":"107","messageId":"108","endLine":30,"endColumn":68},{"ruleId":"109","severity":1,"message":"110","line":92,"column":13,"nodeType":"111","endLine":92,"endColumn":35},{"ruleId":"100","severity":1,"message":"112","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":55,"column":33,"nodeType":"111","endLine":55,"endColumn":99},{"ruleId":"113","severity":1,"message":"114","line":15,"column":33,"nodeType":"111","endLine":15,"endColumn":100},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Main' is defined but never used.","Identifier","unusedVar","'Pagination' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TextareaAutosize' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]